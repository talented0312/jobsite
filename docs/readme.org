#+TITLE: District0x Documentation Generation Readme
#+LANGUAGE: en
#+OPTIONS: H:2 num:t toc:t \n:nil ::t |:t ^:t f:t tex:t

[[https://ipfs.io/ipns/QmY4djEk6L2jqGmcv9WspcpgYARgnVn1dBxcrHeKAvtaiA][Ethlance Documentation]]

* Quickstart
  While in this folder, run on the commandline:
  ~make~

  *Or*

  From the main ethlance repository:
  ~make build-docs~

* Publishing to IPFS
  Results can be published to IPFS as a static website:
  ~make publish-ipfs~

  *Or*

  From the main ethlance repository:
  ~make publish-docs~

  Note that this will also create the files:

  *./docs/.site-hash*, which contains the IPFS hash of the published website
  
  *And*

  *./docs/.site-url*, which contains a gateway to the published website

** Additional Notes
   - Publishing to IPFS requires that you have an IPFS daemon running
     in order to distribute the content.

* Publishing to IPNS
  Results can be published to IPNS as a static website:
  ~make publish-ipns~

  *Or*

  From the main ethlance repository:
  ~make publish-docs-ipns~

** Additional Notes
   - Publishing to IPNS requires that you have an IPFS daemon running
     in order to resolve IPNS hashes into their corresponding IPFS hashes.
     
   - Publishing to IPNS within this ecosystem requires a particular
     key distributed among developers, which is stored in
     *~/.ipfs/keystore*

* Prerequisites
 - java on commandline ~which java~
 - emacs on commandline ~which emacs~
 - graphviz on commandline ~which dot~
   - Ubuntu:  ~sudo apt-get install graphviz~
   - Mac:     ~brew install graphviz~
   - Other:   [[https://graphviz.gitlab.io/download/][Download Page]]
 - dia on commandline ~which dia~
   - Ubuntu:  ~sudo apt-get install dia~
   ~ Mac:     ~brew cask install dia~ [[http://macappstore.org/dia/][?]]
   - Other: [[http://dia-installer.de/]]
 - plantuml.jar
   - *Note* already included in ./bin folder
 - *Optional* ipfs on commandline ~which ipfs~
   - While running an IPFS daemon
   - Used for publishing results to IPFS and IPNS

* Rationale 
  This directory contains scripts to generate documentation with
  ~make~. This folder is meant to serve as a drop-in tool to use with
  District0x projects for managing High-level design and specification
  documentation, with enough flexibility to include diagrams from
  third-party tooling.

* How it Works

** Plant Files
   PlantUML is a tool to convert text into diagrams

   *.plant files placed in the ~./diagrams~ folder are compiled and
   placed in ./base/images folder as *.png and *.svg files of the same
   name.

   For Example, ~./diagrams/test.plant~ would generate the files
   - ~./base/images/test.png~
   - ~./base/images/test.svg~

** Dia Files
   Dia is a free gui tool for creating diagrams

   *.dia files placed in the ~./diagrams~ folder are compiled and
   placed in ./base/images folder as *.png and *.svg files of the same
   name.

   For Example, ~./diagrams/test.dia~ would generate the files
   - ~./base/images/test.png~
   - ~./base/images/test.svg~

** Dot Files (Graphviz)
   Graphviz is a tool to turn text into graphs and diagrams

   *.dot files placed in the ~./diagrams~ folder are compiled and
   placed in ./base/images folder as *.png and *.svg files of the same
   name.

   For Example, ~./diagrams/test.dot~ would generate the files
   - ~./base/images/test.png~
   - ~./base/images/test.svg~

** Org Files
   Org-mode files are used to export into other formats

   *.org files placed in the ~./base~ folder are compiled and placed in
   ~./public/html~ as compiled HTML. Additionally, images are also
   copied from ~./base/images~ to ~./public/html/images~

** Website Publication
   Running ~make~ generates a self-contained website at
   ~./public/html~. This can be hosted on a static web server.

*** Exporting to PDF
    CSS Styling also includes media queries for handling a PDF
    Export. Best results are seen in Chrome Browser

    Example:

    #+BEGIN_SRC sh

    chromium-browser --headless --disable-gpu --print-to-pdf=EthlanceDocs.pdf ./public/html/index.html

    #+END_SRC

    This also works with ~google-chrome-stable~, ~google-chrome~, and
    other web browser exports.

** Known Issues
   - Unexpected behaviour can be seen if you have two files with the
     same basename, but different extension. ie. test.dot -->
     test.png, test.dia --> test.png. Naming things appropriately
     should be of notice.

* References
  - [[https://plantuml.com/][PlantUML Reference]]
  - [[https://orgmode.org/manual/HTML-Export.html#HTML-Export][Org Mode Export]]
  - [[http://www.ffnn.nl/pages/articles/media/uml-diagrams-using-graphviz-dot.php][Graphviz UML Generation Example]]
  - [[http://dia-installer.de/][Dia Diagram Editor Website]]
